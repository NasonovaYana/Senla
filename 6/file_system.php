<?php
//Чтение файла с помощью функции file_get_contents
//    Пусть в директории со скриптом лежит файл test.txt. Считайте данные из этого файла и выведите их на экран.
echo file_get_contents('test.txt') . '<br> ';
//Запись в файл с помощью функции file_put_contents
//Текст из файла test.txt
//    Пусть в директории со скриптом лежит файл test.txt. Запишите в него текст '12345'
file_put_contents('test.txt', '12345');
echo file_get_contents('test.txt') . '<br> ';
//Создание файла через file_put_contents
//Перед этим вручную удалить файл
//    Создайте файл test.txt и запишите в него текст '12345'. Пусть изначально файла с таким именем не существует.
file_put_contents('test.txt', '12345');
echo file_get_contents('test.txt') . '<br> ';
//Создайте файл new.txt с пустым текстом. Пусть изначально файла с таким именем не существует.
file_put_contents('new.txt', '');
//Дан массив с именами файлов ['1.txt', '2.txt', '3.txt']. Переберите его циклом и создайте файлы с такими именами и пустым текстом.
$arrFileNames = ['1.txt', '2.txt', '3.txt'];
foreach ($arrFileNames as $name) {
    file_put_contents($name, '');
}
//Чтение и запись файлов
//    Пусть в директории со скриптом лежит файл test.txt, в котором записан текст '12345'. Откройте этот файл, запишите в конец текста восклицательный знак и сохраните новый текст обратно в файл.
file_put_contents('test.txt', '!', FILE_APPEND);
echo file_get_contents('test.txt') . '<br> ';
//Пусть в директории со скриптом лежит файл count.txt. Изначально в нем записано число 0. Сделайте так, чтобы при обновлении страницы наш скрипт каждый раз увеличивал это число на 1. То есть у нас получится счетчик обновления страницы в виде файла.
$i = file_get_contents('count.txt');
$i++;
file_put_contents('count.txt', $i);
//Пусть в директории со скриптом лежат файлы 1.txt, 2.txt и 3.txt. Вручную сделайте массив с именами этих файлов. Переберите его циклом, прочитайте содержимое каждого из файлов, слейте его в одну строку и запишите в новый файл new.txt. Изначально этого файла не должно быть.
// todo Для корректной работы закомментировать строки 19-21 и добавить в файлы текст
$str = '';
foreach ($arrFileNames as $name) {
    $newStr = file_get_contents($name);
    $str .= $newStr;
}
echo 'Записать: ' . $str . '<br>';
file_put_contents('new.txt', $str);
//Пусть в директории со скриптом лежат файлы 1.txt, 2.txt и 3.txt. Вручную сделайте массив с именами этих файлов. Переберите его циклом и в текст каждого файла в конец запишите восклицательный знак.
foreach ($arrFileNames as $name) {
    file_put_contents($name, '!', FILE_APPEND);
}
//Переименовывание файлов
//    Пусть в директории со скриптом лежит файл old.txt. Переименуйте его на newnew.txt.
rename('old.txt', 'newnew.txt');
//Перемещение файлов
//    Пусть в директории со скриптом лежит файл test.txt. Пусть также в директории со скриптом лежит папка dir. Переместите файл в эту папку.
rename('test.txt', 'dir\test.txt');
//Пусть в директории со скриптом лежит папка dir1, а в ней файл test.txt. Пусть также в директории со скриптом лежит папка dir2. Переместите файл в эту папку.
rename('dir1\test.txt', 'dir2\test.txt');
//Копия файла
//    Пусть в директории со скриптом лежит файл test.txt. Скопируйте его в файл copy.txt.
copy('test1.txt', 'copy.txt');
//Пусть в директории со скриптом лежит файл test.txt. Пусть также в директории со скриптом лежит папка dir. Скопируйте файл test.txt в папку dir. Копию файла также назовите test.txt.
copy('test2.txt', 'dir\test2.txt');
//Удаление файла
//Пусть в директории со скриптом лежит файл test.txt. Удалите его.
unlink('test.txt');
//Пусть в директории со скриптом лежат файлы 1.txt, 2.txt и 3.txt. Вручную сделайте массив с именами этих файлов. Переберите его циклом и удалите все эти файлы.
//foreach ($arrFileNames as $name) {
//    unlink($name);
//}
//Проверка существования файла
// Проверьте, лежит ли в директории со скриптом файл test.txt.
if (file_exists('test.txt')) {
    echo 'Файл существует<br>';
} else {
    echo 'Файл не существует<br>';
}
//Проверьте, лежит ли в директории со скриптом файл test.txt. Если да - удалите его, если нет - создайте.
if (file_exists('test.txt')) {
    unlink('test.txt');
} else {
    file_put_contents('test.txt', 'файл cоздан');
}
//Дан массив с именами файлов ['1.txt', '2.txt', '3.txt']. Переберите его циклом и проверьте каждый файл на существование. Выведите на экран имя каждого файла и рядом текст "существует" или "не существует".
foreach ($arrFileNames as $name) {
    if (file_exists($name)) {
        echo $name . ' существует<br>';
    } else {
        echo $name . ' не существует<br>';
    }
}
//Определение размера файла
//    Пусть в директории со скриптом лежит файл test.txt. Узнайте его размер, выведите на экран.
echo filesize('test.txt') . '<br>';
//Модифицируйте предыдущую задачу так, чтобы размер файла выводился в килобайтах.
echo (filesize('test.txt') / 1000) . 'кБ<br>';
//Положите в директории со скриптом какую-нибудь картинку размером более мегабайта. Узнайте размер этого файла и переведите его в мегабайты.
echo (round(filesize('image.png') / 1000000, 2)) . 'МБ<br>';
//Положите в директории со скриптом какой-нибудь фильм размером более гигабайта. Узнайте размер этого файла и переведите его в гигабайты.
//Запушить видео не получится :с
echo (round(filesize('video.mp4') / 1000000000, 2)) . 'ГБ<br>';
//Работа с переносом строки и PHP_EOL
// Дан файл test.txt. Прочитайте его текст, получите массив его строк.
$arrStr = file('test.txt');
var_dump($arrStr);
// Дан массив. Запишите элементы этого массива в файл test.txt так, чтобы каждый элемент начинался с новой строки.
$arrStrToTest = ['11', '22'];
foreach ($arrStrToTest as $elem) {
    file_put_contents('new_test.txt', $elem . PHP_EOL, FILE_APPEND);
}
//Получение массива строк файла с помощью функции file
//Дан файл test_num.txt. В нем на каждой строке написано какое-то число. С помощью функции file найдите сумму этих чисел и выведете ее на экран.
$arrTestNum = file('test_num.txt');
echo '<br>Сумма чисел из файла: ' . array_sum($arrTestNum);
// Дан файл test_num.txt. В нем на каждой строке написано какое-то число. С помощью функции file найдите сумму этих чисел и запишите эту сумму обратно в конец файла, с новой строки.
file_put_contents('test_num.txt', PHP_EOL . array_sum($arrTestNum), FILE_APPEND);
//Создание папки
//    Создайте в директории со скриптом папку с названием dir.
mkdir('dir');
//Дан массив со строками. Создайте в директории со скриптом папки, названиями которых служат элементы этого массива
$namesStr = ['one', 'two', 'three'];
foreach ($namesStr as $name) {
    mkdir($name);
}
//Создайте в директории со скриптом папку с названием test. Затем создайте в этой папке 3 файла: 1.txt, 2.txt, 3.txt.
mkdir('test');
foreach ($arrFileNames as $name) {
    $name = "test\\" . $name;
    str_replace('\\', '\\\\', $name);
    file_put_contents($name, '');
}
//Удаление папок
// Удалите папку с названием dir.
rmdir('dirr');
//Переименовывание и перемещение папок
// Пусть в директории со скриптом лежит папка old. Переименуйте ее на new.
rename('old', 'new');
//Чтение содержимого папки с помощью scandir
//Пусть в директории со скриптом лежит папка dir, а в ней какие-то текстовые файлы. Выведите на экран столбец имен этих файлов.
$arrDir = scandir('dir');
foreach ($arrDir as $key => $elem) {
    if ($key > 2) {
        echo $elem . '<br>';
    }
}
// Пусть в директории со скриптом лежит папка dirScan, а в ней какие-то текстовые файлы. Переберите эти файлы циклом, откройте каждый из них и запишите в конец восклицательный знак.
$arrFiles = array_diff(scandir('dirScan'),['..','.']);
foreach ($arrFiles as $name) {
    $name = "dirScan\\" . $name;
        file_put_contents($name, '!', FILE_APPEND);
}

//Отличаем папку от файла с помощью is_file и is_dir
//    Пусть  дан путь к файлу. Проверьте, файл это или папка.
$str = 'test.txt';
if (is_dir($str)) {
    echo '<br>Это папка<br>';
} else {
    echo '<br>Это файл<br>';
}
//Пусть в директории со скриптом лежит папка dir, а в ней какие-то файлы и подпапки. Выведите на экран столбец имен файлов из папки dir.
foreach ($arrFiles as $name) {
    if (is_file($name)) {
        echo $name . '<br>';
    }
}
//Рекурсивный обход вложенных папок
// Пусть в директории со скриптом лежит папка dirScan, а в ней какие-то текстовые файлы и подпапки. В подпапках в свою очередь также могут быть текстовые файлы и подпапки. Рекурсивно пройдитесь по всем вложенным папкам и выведите в браузер пути ко всем текстовым файлам.

function getFilePath($nameDir){
        $nameFiles = array_diff (scandir($nameDir),['..','.']);
        foreach ($nameFiles as $elem) {
            $path =$nameDir.'/'.$elem;
            if (is_dir($path)) {
                getFilePath($path);
            }
            else {
                echo $path.'<br>';
            }
        }

}
getFilePath('dirScan');
// Пусть в директории со скриптом лежит папка dirScan с текстовыми файлами и подпапками. Рекурсивно пройдитесь по всем вложенным папкам и в конец каждого текстового файла запишите восклицательный знак.
function addToFile($nameDir){
    $nameFiles = array_diff (scandir($nameDir),['..','.']);
    foreach ($nameFiles as $elem) {
        $path =$nameDir.'/'.$elem;
        if (is_dir($path)) {
            addToFile($path);
        }
        else {
            file_put_contents($path, '!', FILE_APPEND);
        }
    }

}
addToFile('dirScan');
//Рекурсивное удаление папки вместе с подпапками
// Пусть в директории со скриптом лежит папка dir с текстовыми файлами и подпапками. Удалите папку dir вместе с ее содержимым.
function dirRm($nameDir){
    $nameFiles = array_diff (scandir($nameDir),['..','.']);
    foreach ($nameFiles as $elem) {
        $path =$nameDir.'/'.$elem;
        if (is_dir($path)) {
           dirRm($path);
        }
        else {
            unlink($path);
        }
    }
    rmdir($nameDir);
}
//dirRm('dirScanDel');
//Повторение:
echo "<br>Повторение: <br><br>";
//    Создайте массив заработных плат $arr. Выведите на экран зарплату Пети и Коли.
$arr = ['Коля' => '1000$', 'Вася' => '500$', 'Петя' => '200$'];
echo "Зарплата Пети - " . $arr['Петя'] . ", зарплата Коли - " . $arr['Коля'] . "<br>";
//
//    Переделайте этот код так, чтобы в нем использовались операции ++ и --. Количество строк кода при этом не должно измениться.
//$var = 10;
//        $var = $var + 1;
//        $var = $var + 1;
//        $var = $var - 1;
//        echo $var;
$var = 10;
$var++;
$var++;
$var--;
echo $var . "<br>";
//
//    Дана строка '1234567890'. Сделайте из нее строку '12-34-56-78-90' не используя цикл.
$str = '1234567890';
$str = implode('-', str_split($str, 2));
echo $str . "<br>";

//Дана строка 'abc abc abc'. Определите позицию первой найденной буквы 'b', если начать поиск не с начала строки, а с позиции 3.
$str = 'abc abc abc';
$position = strpos($str, 'b', 3);
echo $position . '<br>';
//    Сделайте функцию, которая параметрами принимает 2 числа. Если их сумма больше 10 - пусть функция вернет true, а если нет - false.
function compareX($a, $b)
{
    return ($a + $b > 10);
}

//Дано число. Найдите сумму цифр этого числа не используя цикл.
$a = 12345;
$sum = array_sum(str_split($a, 1));
var_dump($sum);

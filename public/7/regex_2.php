<?php
include '../helpers.php';
//На карманы при замене
echo 'Дана строка \'aaa@bbb eee7@kkk\'. Напишите регулярку, которая найдет строки по шаблону: любое количество букв и цифр, символ @, любое количество букв и цифр и поменяет местами то, что стоит до @ на то, что стоит после нее. Например, aaa@bbb должно превратиться в bbb@aaa.';
$str = 'aaa@bbb eee7@kkk';
echo '<br>' . preg_replace('#([a-z0-9]+)@([a-z0-9]+)#', '$2@$1', $str) . '<br>';

echo 'Дана строка вида \'a1b2c3\'. Напишите регулярку, которая найдет все цифры и удвоит их количество таким образом: \'a11b22c33\' (то есть рядом с каждой цифрой напишет такую же).';
$str = 'a1b2c3';
echo '<br>' . preg_replace('#\d#', '$0$0', $str) . '<br>';

//На карманы в самой регулярке
echo 'Дана строка \'aae xxz 33a\'. Найдите все места, где есть два одинаковых идущих подряд символа и замените их на \'!\'.';
$str = 'aae xxz 33a';
echo '<br>' . preg_replace('#([a-z1-9])\1#', '!', $str) . '<br>';

echo 'Дана строка \'aaa bcd xxx efg\'. Найдите строки, состоящие из одинаковых символов (это будет aaa xxx).';
$str = 'aaa bcd xxx efg';
preg_match_all('#([a-z])\1+#', $str, $arr);
dd($arr);
//Задачи на preg_match[_all] (Задачи ниже не всегда можно решить с помощью одной только регулярки. Может понадобится еще что-нибудь дописать на PHP (не всегда, но такое может быть).)
echo 'С помощью preg_match определите, что переданная строка является емэйлом. Примеры емэйлов для тестирования mymail@mail.ru, my.mail@mail.ru, my-mail@mail.ru, my_mail@mail.ru, mail@mail.com, mail@mail.by, mail@yandex.ru.<br><br>';
$str = 'my.mail@mail.ru';
if (preg_match('#^[a-z]\S+@[a-z]+\.[a-z]{2,3}$#', $str)) {
    echo $str . ' корректный email' . '<br>';
} else {
    echo $str . ' не корректный email' . '<br>';
}

echo '<br>Дана строка с текстом, в котором могут быть емейлы. С помощью preg_match_all найдите все емэйлы.';
$str = 'mymail@mail.ru, my.mail@mail.ru, my-mailmail.ru, my_mail@mail.ru, mail@mail.com, mail@mail.by, mail@yandex.ru.';
preg_match_all('#[a-z]\S+@[a-z]+\.[a-z]{2,3}#', $str, $arr);
dd($arr);
echo 'С помощью preg_match определите, что переданная строка является доменом. Примеры доменов: site.ru, site.com, my-site123.com.<br><br>';
$str = 'site.ru';
if (preg_match('#^[a-z]+\S+\.[a-z]{2,3}$#', $str)) {
    echo $str . ' является доменом.' . '<br>';
} else {
    echo $str . ' не является доменом' . '<br>';
}
//С помощью preg_match определите, что переданная строка является доменом, название которого начинается с http. Примеры доменов: http://site.ru, http://site.com.
$str = 'http://site.ru';
if (preg_match('#^http\://[a-z]+\S+\.[a-z]{2,3}$#', $str)) {
    echo $str . ' является доменом, название которого начинается с http.' . '<br>';
} else {
    echo $str . ' не является доменом, название которого начинается с http' . '<br>';
}
//С помощью preg_match определите, что переданная строка является доменом вида http://site.ru. Протокол может быть как http, так и https.
$str = 'http://site.ru';
if (preg_match('#^http(s)?\://[a-z]+\S+\.[a-z]{2,3}$#', $str)) {
    echo $str . ' является доменом, название которого начинается с http/https.' . '<br>';
} else {
    echo $str . ' не является доменом, название которого начинается с http/https' . '<br>';
}
//С помощью preg_match определите, что переданная строка является доменом. Протокол может быть как http, так и https. Домен может быть со слешем в конце: http://site.ru, http://site.ru/, https://site.ru, https://site.ru/.
$str = 'http://site.ru/';
if (preg_match('#^http(s)?\://[a-z]+\S+\.[a-z]{2,3}(/)?$#', $str)) {
    echo $str . ' является доменом.' . '<br>';
} else {
    echo $str . ' не является доменом.' . '<br>';
}
//С помощью preg_match определите, что переданная строка начинается с http или с https.
$str = 'https://site.ru/';
if (preg_match('#^http(s)?\S+$#', $str)) {
    echo $str . ' начинается с http или с https.' . '<br>';
} else {
    echo $str . ' не начинается с http или с https.' . '<br>';
}
//С помощью preg_match определите, что переданная строка заканчивается расширением txt, html или php.
$str = 'file.html';
if (preg_match('#\.(txt|html|php)$#', $str)) {
    echo $str . ' строка заканчивается расширением txt, html или php.' . '<br>';
} else {
    echo $str . ' строка не заканчивается расширением txt, html или php.' . '<br>';
}
//С помощью preg_match определите, что переданная строка заканчивается расширением jpg или jpeg.
$str = 'file.png';
if (preg_match('#\.(jpg|jpeg)$#', $str)) {
    echo $str . ' строка заканчивается расширением jpg или jpeg.' . '<br>';
} else {
    echo $str . ' строка не заканчивается расширением jpg или jpeg.' . '<br>';
}
//Дана строка с буквами, пробелами и цифрами. Найдите сумму всех чисел из данной строки.
$str = '23rwf 4 wer5ds 6rgr';
preg_match_all('#[1-9]#', $str, $arr);
$sum = array_sum($arr[0]);
echo "Сумма всех цифр из строки $str = " . $sum;

//Задачи на preg_replace
//С помощью preg_replace преобразуйте дату в формате '31-12-2014' в '2014.12.31'.
echo '<br>' . preg_replace('#(.*)\-(.*)\-(.*)#', '$3.$2.$1', '31-12-2014') . '<br>';
//С помощью preg_replace замените в строке домены вида http://site.ru, http://site.com на <a href="http://site.ru">site.ru</a>.
echo '<br>' . preg_replace('#http\://(.*)#', '<a href="$0">$1</a>', 'http://site.ru') . '<br>';

//На позитивный и негативный просмотр
echo '<br>С помощью позитивного и негативного просмотра найдите все строки по шаблону буква b, затем 3 буквы a и поменяйте 3 буквы a на знак \'!\'. То есть из \'baaa\' нужно сделать \'b!\'.<br>';
$str = 'baa baaaaa baaa baba';
//А почему нельзя так:
//echo preg_replace('#(b)(aaa)#', '$1!',$str);
echo preg_replace('#(?<=b)aaa#', '!', $str) . '<br>';

echo 'С помощью позитивного и негативного просмотра найдите все строки по шаблону 3 буквы a, затем буква b и поменяйте 3 буквы a на знак \'!\'. То есть из \'aaab\' нужно сделать \'!b\'.<br>';
$str = 'adab aaab ab aaaaab baaab';
echo preg_replace('#aaa(?=b)#', '!', $str) . '<br>';
//С помощью позитивного и негативного просмотра найдите все строки по шаблону 3 буквы a, затем любая буква, но не b и поменяйте 3 буквы a на знак '!'. То есть из, к примеру, 'aaaw' нужно сделать '!w', а 'aaab' не поменяется.
$str = 'aaaw aaab';
echo preg_replace('#aaa(?!b)#', '!', $str) . '<br>';

echo 'Дана строка со звездочками \'aaa * bbb ** eee * **\'. Замените на \'!\' только одиночные звездочки, но не двойные.<br>';
$str = 'aaa * bbb ** eee * **';
echo preg_replace('#(?<= )\*(?= )#', '!', $str) . '<br>';

echo 'С помощью позитивного и негативного просмотра найдите две одинаковые идущие подряд буквы и первую поменяйте на \'!\'.<br>';
$str = 'dfjkksd fdsjjf aasjk';
echo preg_replace('#([a-z])(?=\1)#', '!', $str) . '<br>';

echo 'С помощью позитивного и негативного просмотра найдите две одинаковые идущие подряд буквы и вторую поменяйте на \'!\'.<br>';
echo preg_replace('#(?<=([a-z]))\1#', '!', $str) . '<br>';

//На preg_replace_callback
//Дана строка с целыми числами. С помощью регулярки преобразуйте строку так, чтобы вместо этих чисел стояли их квадраты.
$str = '2 3 4';
function powStr($num)
{
    return $num[0] * $num[0];
}

echo preg_replace_callback('#\d#', 'powStr', $str) . '<br>';

echo 'Дана строка с целыми числами. Найдите числа, стоящие в кавычках и увеличьте их в два раза. Пример: из строки 2aaa\'3\'bbb\'4\' сделаем строку 2aaa\'6\'bbb\'8\'.<br>';
$str = '2aaa\'3\'bbb\'4\'';
function doubleStr($num)
{
    return $num[0] * 2;
}

echo preg_replace_callback('#(?<=\')\d(?=\')#', 'doubleStr', $str) . '<br>';

//Повторение:
echo '<br>Повторение<br>';
//Если переменная $a больше или равна нулю, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном 1, 0, -3.
$a = 3;
if ($a >= 0) {
    echo 'Верно<br>';
} else {
    echo 'Не верно<br>';
}
//Дана строка с цифрами, например, '12345'. Проверьте, что первым символом этой строки является цифра 1, 2 или 3. Если это так - выведите 'да', в противном случае выведите 'нет'.
$str = '12345';
if ($str[0] == 1 or $str[0] == 2 or $str[0] == 3) {
    echo 'да<br>';
} else {
    echo 'нет<br>';
}
//Выведите столбец чисел от 1 до 100 не используя цикл.
$arr = range(1,100);
echo implode('<br>',$arr);
//Дан массив с элементами '<b>php</b>', '<i>html</i>'. Создайте новый массив, в котором из элементов будут удалены теги.
$arr = ['<b>php</b>', '<i>html</i>'];
function deleteTags($elem){
    return strip_tags($elem);
}
$arr = array_map('deleteTags',$arr);
dd($arr);
//Пусть в директории со скриптом лежит папка dir, а в ней какие-то файлы и подпапки. Выведите на экран столбец имен подпапок из папки dir.
$arr = array_diff(scandir('dir'),['.','..']);
echo 'Подпапки:<br>';
foreach ($arr as $elem){
        if(is_dir('dir/'.$elem))
        echo $elem.'<br>';
}
//Дан файл test.txt. В нем на каждой строке написано какое-то число. Найдите сумму этих чисел и запишите ее в файл sum.txt.
$arr = file('test.txt');
file_put_contents('sum.txt',array_sum($arr));